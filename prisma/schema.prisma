// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  login     String
  password  String
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
  cards     Card[]
}

model Product {
  id          String   @id @default(uuid())
  description String
  price       Float
  countable   Boolean  @default(false)
  quantity    Int      @default(0)
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders      Order[]
}

model Card {
  id         String   @id @default(uuid())
  clientName String?
  checked    Boolean?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders     Order[]
}

model Order {
  id              String   @id @default(uuid())
  productPrice    Float
  productQuantity Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  cardId          String // relation scalar field (used in the `@relation` attribute above)
  productId       String // relation scalar field (used in the `@relation` attribute above)
  card            Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)
  product         Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}
